# AI Reviewer Backend Configuration
spring:
  application:
    name: ai-reviewer-backend
  
  profiles:
    active: dev
  
  datasource:
    url: ${DB_URL:jdbc:mysql://localhost:3306/ai_reviewer?useUnicode=true&characterEncoding=utf8mb4&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&createDatabaseIfNotExist=true}
    username: ${DB_USER:root}
    password: ${DB_PASS:password}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 600000
      max-lifetime: 1800000
      connection-timeout: 30000
  
  jpa:
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: false
        use_sql_comments: false
        default_schema: ai_reviewer
        connection:
          CharSet: utf8mb4
          characterEncoding: utf8mb4
          useUnicode: true
        storage_engine: innodb
    open-in-view: false
    database-platform: org.hibernate.dialect.MySQL8Dialect
  
  flyway:
    enabled: true
    baseline-on-migrate: true
    baseline-version: 0
    locations: classpath:db/migration
    schemas: ai_reviewer
    table: flyway_schema_history
    encoding: UTF-8
    validate-on-migrate: true
    clean-disabled: true
  
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GITHUB_CLIENT_ID:}
            client-secret: ${GITHUB_CLIENT_SECRET:}
          gitlab:
            client-id: ${GITLAB_CLIENT_ID:}
            client-secret: ${GITLAB_CLIENT_SECRET:}

# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /api

# Management/Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when_authorized

# Application Configuration
ai-reviewer:
  reports:
    output-dir: ${AI_REVIEWER_REPORTS_DIR:./reports}
  
  scm:
    webhook-secret: ${WEBHOOK_SECRET:change-me-in-production}
  
  llm:
    budget-usd: 0.25
    timeout: 60s
  
  scoring:
    weights:
      SECURITY: 0.30
      QUALITY: 0.25
      MAINTAINABILITY: 0.20
      PERFORMANCE: 0.15
      TEST_COVERAGE: 0.10
    severity-penalty:
      INFO: 1
      MINOR: 3
      MAJOR: 7
      CRITICAL: 12
    ignore-confidence-below: 0.3

# Logging Configuration
logging:
  level:
    com.ai.reviewer: INFO
    org.springframework.security: INFO
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{36}] - %msg%n"

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
  
  # Override for development
  datasource:
    url: ${DB_URL:jdbc:mysql://localhost:3306/ai_reviewer_dev?useUnicode=true&characterEncoding=utf8mb4&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&createDatabaseIfNotExist=true}
  
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true

  flyway:
    schemas: ai_reviewer_dev

logging:
  level:
    com.ai.reviewer: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

---
# Production Profile  
spring:
  config:
    activate:
      on-profile: prod
  
  datasource:
    hikari:
      maximum-pool-size: 50
      minimum-idle: 10
  
  jpa:
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        use_sql_comments: false

logging:
  level:
    com.ai.reviewer: INFO
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
